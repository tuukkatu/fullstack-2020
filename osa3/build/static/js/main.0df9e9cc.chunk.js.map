{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","Persons","persons","filter","toUpperCase","includes","map","key","Filter","onFilterChange","value","onChange","PersonForm","props","onSubmit","addNameNumber","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","newObject","post","id","put","delete","Notification","message","className","ErrorNotification","App","useEffect","personService","then","response","setPersons","data","useState","setNewName","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","updateNumber","old","find","updated","setTimeout","catch","error","event","target","preventDefault","length","nameExists","window","confirm","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0df9e9cc.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, onDelete }) => {\n    return (\n    <li>\n        {person.name} {person.number} {' '}\n        <button onClick={() => onDelete(person)}>delete</button>\n    </li>\n    )\n}\n\nconst Persons = ({ persons, filter, onDelete}) => {\n    const caseInsensitiveFilter = (person) => (\n        person.name.toUpperCase().includes(filter.toUpperCase())\n    )\n\n    return (\n        <ul>\n            {persons.filter(caseInsensitiveFilter)\n            .map(person => <Person key={person.name} person={person} onDelete={onDelete}/>)}\n        </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ filter, onFilterChange}) => {\n    return (\n        <p>filter shown with <input value={filter} onChange={onFilterChange}/></p>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addNameNumber}>\n        <div>\n            name: <input value={props.newName} onChange={props.handleNameChange}/>\n        </div>\n        <div>\n            number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update, deletePerson}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notError\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }, [])\n    \n\n\n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter] = useState('')\n    const [ message, setMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    const nameExists = (persons, name) => {\n      return (\n          persons.filter(person => person.name === name).length > 0\n      )\n  }\n\n  const addNameNumber = (event) => {\n    event.preventDefault()\n\n    if(nameExists(persons, newName)) {\n        const accepted = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n        if (accepted) {\n            updateNumber(newName)\n        }\n    } else {\n        const nameObject = {\n            name:newName,\n            number:newNumber\n        }\n    \n        personService\n            .create(nameObject)\n            .then(response => {\n                setPersons(persons.concat(response.data))\n                setNewName('')\n                setNewNumber('')\n                setMessage(`Added ${newName}`)\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            })\n    } \n  }\n\n  const handleDelete = deletedPerson => {\n      const accepted = window.confirm(`Delete ${deletedPerson.name}?`)\n      if (accepted) {\n          personService\n            .deletePerson(deletedPerson.id)\n            .then(() => {\n                setPersons(persons.filter(person => person.id !== deletedPerson.id))\n                setMessage(`Deleted ${deletedPerson.name} succesfully!`)\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `Information of ${deletedPerson.name} was already removed from server`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n      }\n  }\n\n  const updateNumber = (name) => {\n      const old = persons.find(person => person.name === name)\n      const updated = {...old, number: newNumber}\n\n      personService\n        .update(updated.id, updated)\n        .then(response => {\n            setPersons(persons.map(person => \n                person.id !== old.id ? person: response.data))\n            setMessage(`Number of ${name} changed succesfully!`)\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)    \n            setNewName('')\n            setNewNumber('')\n        })\n        .catch(error => {\n            setErrorMessage(\n                `Information of ${name} was already removed from server`\n            )\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        })\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n      setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <ErrorNotification message={errorMessage}/>\n\n      <Filter filter={filter} onFilterChange={handleFilterChange}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        addNameNumber={addNameNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filter} onDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}